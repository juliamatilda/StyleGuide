//----- BEM Mixins -----//
//Block Element Modifier
//e = Element
@mixin e($element){
  &__#{$element} {
    @content;
  }
}

//m = Modifier
@mixin m($modifier) {
  &--#{$modifier} {
    @content;
    }
}


//----- Media Queries -----//
@mixin media($break) {
  @if $break == "small" {
    @media (min-width: $breakpoint-sm) and (max-width: $breakpoint-md) {
      @content;
    }
  }
  @else if $break == "medium" {
    @media (min-width: $breakpoint-md + 1) {
      @content;
    }
  }
  @else if $break == "large" {
    @media (min-width: $breakpoint-lg) {
      @content;
    }
  }
   @else {
   	@error "Unable to retrieve a value for `#{$break}`. "
  }
}


//----- Flexbox Settings -----//
@mixin flexbox(
  $display: flex,
  $direction: null,
  $justify: null,
  $align: null) {
   display: $display;
   flex-direction: $direction;
   justify-content:  $justify;
   align-items: $align;
   @content;
}

//----- Grid Style -----//
@mixin grid {
  @include flexbox;
  border-radius: 5px;
  border: none;
  font-size: em(16px);
  color: palette(grey, x-light);;
  font-weight: $font-wt--medium;
  padding: em(15px) em(13px) em(15px);
  @content;
}

//Grid background-color//
@mixin grid-bg-color {
  @each $color in $grid-colors {
    $index: index($grid-colors, $color);
    &--#{$index}.theme__colors {
      background-color: $color;
    }
  }
}

//----- Center helper -----//
@mixin center($width) {
  width: $width;
  margin: 0 auto;
  @content;
}
